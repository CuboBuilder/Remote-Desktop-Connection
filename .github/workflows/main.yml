name: Cl

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 60   # keep alive for 1 hour

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Download Playit agent
      run: |
        $url = "https://github.com/playit-cloud/playit-agent/releases/download/v0.16.2/playit-windows-x86_64-signed.exe"
        Invoke-WebRequest -Uri $url -OutFile playit.exe

    - name: Enable RDP and firewall
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

    - name: Create local user
      shell: powershell
      run: |
        $username = "admin"
        $passwordPlain = "Letmein123!"   # must meet Windows complexity rules
        $securePass = ConvertTo-SecureString $passwordPlain -AsPlainText -Force

        if (-not (Get-LocalUser -Name $username -ErrorAction SilentlyContinue)) {
          New-LocalUser -Name $username -Password $securePass -FullName $username -Description "RDP user"
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
        } else {
          Set-LocalUser -Name $username -Password $securePass
        }

    - name: Run Playit agent and log output
      shell: powershell
      run: |
        $outPath = "$PWD\playit_out.log"
        $errPath = "$PWD\playit_err.log"
        Write-Host "Launching Playit agent..."
        Start-Process -FilePath .\playit.exe -NoNewWindow -RedirectStandardOutput $outPath -RedirectStandardError $errPath

        Write-Host "Waiting for Playit claim URL..."
        $claim = $null
        for ($i=0; $i -lt 60; $i++) {
          Start-Sleep -Seconds 2
          if (Test-Path $outPath) {
            $content = Get-Content $outPath -Raw
            if ($content -match "https:\/\/playit\.gg\/claim\/\S+") {
              $claim = [regex]::Match($content, "https:\/\/playit\.gg\/claim\/\S+").Value
              Write-Host "============================="
              Write-Host "CLAIM URL: $claim"
              Write-Host "============================="
              break
            }
          }
        }

        if (-not $claim) {
          Write-Host "‚ùå No claim URL found in logs after waiting."
        }

        Write-Host "---- BEGIN PLAYIT LOG ----"
        if (Test-Path $outPath) { Get-Content $outPath }
        if (Test-Path $errPath) { Get-Content $errPath }
        Write-Host "---- END PLAYIT LOG ----"

        # Keep job alive so tunnel stays running
        Write-Host "Keeping Playit alive... Press cancel in GitHub Actions UI to stop."
        while ($true) { Start-Sleep -Seconds 30 }
